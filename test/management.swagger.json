{
  "swagger": "2.0",
  "info": {
    "title": "managementapi/management.proto",
    "version": "version not set"
  },
  "basePath": "/api/management",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/audit_logs": {
      "get": {
        "summary": "List audit logs",
        "description": "Lists the audit logs.",
        "operationId": "ListAuditLogs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListAuditLogsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page_token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/contacts/verify": {
      "post": {
        "summary": "Start verify contact",
        "description": "Initiates a contact verification for a user.",
        "operationId": "StartVerifyContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StartVerifyContactResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StartVerifyContactRequest"
            }
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/contacts/{contact_id}": {
      "delete": {
        "summary": "Delete contact",
        "description": "Deletes a contact of a user.",
        "operationId": "DeleteContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteContactResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/contacts/{contact_id}/primary": {
      "put": {
        "summary": "Update primary contact",
        "description": "Updates the primary contact for a user.",
        "operationId": "UpdatePrimaryContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authapiv1Contact"
            }
          }
        },
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/roles": {
      "get": {
        "summary": "List roles",
        "description": "List the roles.",
        "operationId": "ListRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRolesResponse"
            }
          }
        },
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create role",
        "description": "Creates a non-system role.",
        "operationId": "CreateRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Role"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateRoleRequest"
            }
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/roles/{role_id}": {
      "delete": {
        "summary": "Delete role",
        "description": "Deletes a non-system role.",
        "operationId": "DeleteRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteRoleResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/roles/{role_id}/permissions": {
      "get": {
        "summary": "List permission assignments",
        "description": "Lists the permission assignments of a role.",
        "operationId": "ListPermissionAssignments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListPermissionAssignmentsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/sessions": {
      "get": {
        "summary": "List sessions",
        "description": "Lists the active sessions of a user.",
        "operationId": "ListSessions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSessionsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page_token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create an session.\nThis should be used with caution, as this API assumes the site (admin) to authenticate user with their own means.\nThis can bypass the Authcore login progress by issuing a valid Session.",
        "operationId": "CreateSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AccessToken"
            }
          }
        },
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/sessions/{session_id}": {
      "delete": {
        "summary": "Delete session",
        "description": "Deletes an active session for a user.",
        "operationId": "DeleteSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteSessionResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "summary": "List users",
        "description": "Lists the users.",
        "operationId": "ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUsersResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page_token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create user",
        "description": "Creates a new user.",
        "operationId": "CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/current/permissions": {
      "get": {
        "summary": "List current user permissions",
        "description": "Lists the owned permissions.",
        "operationId": "ListCurrentUserPermissions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListCurrentUserPermissionsResponse"
            }
          }
        },
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/password": {
      "post": {
        "summary": "Change password",
        "description": "Changes the password of a user.",
        "operationId": "ChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ChangePasswordResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/{user_id}": {
      "get": {
        "summary": "Get user",
        "description": "Gets an user.",
        "operationId": "GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update user",
        "description": "Updates an user.",
        "operationId": "UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateUserRequest"
            }
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/{user_id}/contacts": {
      "get": {
        "summary": "List contacts",
        "description": "Lists the contacts of a user.",
        "operationId": "ListContacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListContactsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create contact",
        "description": "Adds a contact for a user.",
        "operationId": "CreateContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authapiv1Contact"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateContactRequest"
            }
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/{user_id}/metadata": {
      "get": {
        "summary": "Get metadata",
        "description": "Gets the user metadata and app metadata of a user.",
        "operationId": "GetMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMetadataResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update metadata",
        "description": "Updates the user metadata and app metadata of a user.",
        "operationId": "UpdateMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateMetadataResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateMetadataRequest"
            }
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/{user_id}/roles": {
      "get": {
        "summary": "List role assignments",
        "description": "Lists the role assignments of a role.",
        "operationId": "ListRoleAssignments",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListRoleAssignmentsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Assign role",
        "description": "Assigns a role to a user.",
        "operationId": "AssignRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AssignRoleResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AssignRoleRequest"
            }
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/{user_id}/roles/{role_id}": {
      "delete": {
        "summary": "Unassign role",
        "description": "Unassigns a role from a user.",
        "operationId": "UnassignRole",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UnassignRoleResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "role_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/{user_id}/second_factors": {
      "get": {
        "summary": "List second factors",
        "description": "Lists the second factors of a user.",
        "operationId": "ListSecondFactors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSecondFactorsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "ManagementService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "AccessTokenTokenType": {
      "type": "string",
      "enum": [
        "BEARER"
      ],
      "default": "BEARER"
    },
    "AuditLogEntityResult": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "FAIL",
        "SUCCESS"
      ],
      "default": "UNKNOWN"
    },
    "SecondFactorContent": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "used": {
          "type": "string",
          "format": "int64"
        },
        "codes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "authapiv1Contact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/v1ContactType"
        },
        "value": {
          "type": "string"
        },
        "verified": {
          "type": "boolean",
          "format": "boolean"
        },
        "primary": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "An email or phone number registered by a user."
    },
    "protobufListValue": {
      "type": "object",
      "properties": {
        "values": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufValue"
          },
          "description": "Repeated field of dynamically typed values."
        }
      },
      "description": "`ListValue` is a wrapper around a repeated field of values.\n\nThe JSON representation for `ListValue` is JSON array."
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "protobufStruct": {
      "type": "object",
      "properties": {
        "fields": {
          "type": "object",
          "additionalProperties": {
            "$ref": "#/definitions/protobufValue"
          },
          "description": "Unordered map of dynamically typed values."
        }
      },
      "description": "`Struct` represents a structured data value, consisting of fields\nwhich map to dynamically typed values. In some languages, `Struct`\nmight be supported by a native representation. For example, in\nscripting languages like JS a struct is represented as an\nobject. The details of that representation are described together\nwith the proto support for the language.\n\nThe JSON representation for `Struct` is JSON object."
    },
    "protobufValue": {
      "type": "object",
      "properties": {
        "null_value": {
          "$ref": "#/definitions/protobufNullValue",
          "description": "Represents a null value."
        },
        "number_value": {
          "type": "number",
          "format": "double",
          "description": "Represents a double value."
        },
        "string_value": {
          "type": "string",
          "description": "Represents a string value."
        },
        "bool_value": {
          "type": "boolean",
          "format": "boolean",
          "description": "Represents a boolean value."
        },
        "struct_value": {
          "$ref": "#/definitions/protobufStruct",
          "description": "Represents a structured value."
        },
        "list_value": {
          "$ref": "#/definitions/protobufListValue",
          "description": "Represents a repeated `Value`."
        }
      },
      "description": "`Value` represents a dynamically typed value which can be either\nnull, a number, a string, a boolean, a recursive struct value, or a\nlist of values. A producer of value is expected to set one of that\nvariants, absence of any variant indicates an error.\n\nThe JSON representation for `Value` is JSON value."
    },
    "v1AccessToken": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string",
          "description": "The access token issued by the server."
        },
        "refresh_token": {
          "type": "string",
          "description": "The new refresh token for obtaining access token later."
        },
        "token_type": {
          "$ref": "#/definitions/AccessTokenTokenType",
          "description": "Type of the token."
        },
        "expires_in": {
          "type": "string",
          "format": "int64",
          "description": "The lifetime in seconds of the access token."
        },
        "id_token": {
          "type": "string",
          "description": "The ID token issued by the server."
        }
      },
      "description": "An access token."
    },
    "v1AssignRoleRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "role_id": {
          "type": "string"
        }
      },
      "description": "The request for AssignRole."
    },
    "v1AssignRoleResponse": {
      "type": "object",
      "description": "The response for AssignRole."
    },
    "v1AuditLogEntity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "action": {
          "type": "string"
        },
        "target": {
          "$ref": "#/definitions/protobufStruct"
        },
        "session_id": {
          "type": "string"
        },
        "device": {
          "type": "string"
        },
        "ip": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "result": {
          "$ref": "#/definitions/AuditLogEntityResult"
        },
        "is_external": {
          "type": "boolean",
          "format": "boolean"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "An audit log entry."
    },
    "v1ChangePasswordRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "password_verifier": {
          "$ref": "#/definitions/v1PasswordVerifier"
        },
        "old_password_response": {
          "$ref": "#/definitions/v1PasswordResponse"
        }
      },
      "description": "The request for ChangePassword."
    },
    "v1ChangePasswordResponse": {
      "type": "object",
      "description": "The response for ChangePassword."
    },
    "v1ContactType": {
      "type": "string",
      "enum": [
        "EMAIL",
        "PHONE"
      ],
      "default": "EMAIL"
    },
    "v1CreateContactRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "contact": {
          "$ref": "#/definitions/authapiv1Contact"
        }
      },
      "description": "The request for CreateContact."
    },
    "v1CreateRoleRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      },
      "description": "The request for CreateRole."
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        }
      },
      "description": "The request for CreateUser."
    },
    "v1CreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "refresh_token": {
          "type": "string"
        }
      },
      "description": "The response for CreateUser."
    },
    "v1DeleteContactResponse": {
      "type": "object",
      "description": "The response for DeleteContact."
    },
    "v1DeleteRoleResponse": {
      "type": "object",
      "description": "The response for DeleteRole."
    },
    "v1DeleteSessionResponse": {
      "type": "object",
      "description": "The response for DeleteSession."
    },
    "v1GetMetadataResponse": {
      "type": "object",
      "properties": {
        "user_metadata": {
          "type": "string"
        },
        "app_metadata": {
          "type": "string"
        }
      },
      "description": "The request for GetMetadata."
    },
    "v1ListAuditLogsResponse": {
      "type": "object",
      "properties": {
        "audit_logs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AuditLogEntity"
          }
        },
        "next_page_token": {
          "type": "string"
        },
        "previous_page_token": {
          "type": "string"
        },
        "total_size": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "The response for ListAuditLogs."
    },
    "v1ListContactsResponse": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/authapiv1Contact"
          }
        }
      },
      "description": "The response for ListContacts."
    },
    "v1ListCurrentUserPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Permission"
          }
        }
      },
      "description": "The response for ListCurrentUserPermissions."
    },
    "v1ListPermissionAssignmentsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Permission"
          }
        }
      },
      "description": "The response for ListPermissionAssignments."
    },
    "v1ListRoleAssignmentsResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Role"
          }
        }
      },
      "description": "The response for ListRoleAssignments."
    },
    "v1ListRolesResponse": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Role"
          }
        }
      },
      "description": "The response for ListRoles."
    },
    "v1ListSecondFactorsResponse": {
      "type": "object",
      "properties": {
        "second_factors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SecondFactor"
          }
        }
      },
      "description": "The response for ListSecondFactors."
    },
    "v1ListSessionsResponse": {
      "type": "object",
      "properties": {
        "sessions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Session"
          }
        },
        "next_page_token": {
          "type": "string"
        },
        "previous_page_token": {
          "type": "string"
        },
        "total_size": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "The response for ListSessions."
    },
    "v1ListUsersResponse": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1User"
          }
        },
        "next_page_token": {
          "type": "string"
        },
        "previous_page_token": {
          "type": "string"
        },
        "total_size": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "The response for ListUsers."
    },
    "v1PasswordResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "confirmation": {
          "type": "string",
          "format": "byte",
          "description": "The confirmation message of the client."
        }
      },
      "description": "The SPAKE2+ response (comfirmation for SPAKE2+)."
    },
    "v1PasswordVerifier": {
      "type": "object",
      "properties": {
        "salt": {
          "type": "string",
          "format": "byte",
          "description": "The salt used to hash the password."
        },
        "verifierW0": {
          "type": "string",
          "format": "byte",
          "description": "The password verifier defined by the SPAKE2+ protocol."
        },
        "verifierL": {
          "type": "string",
          "format": "byte",
          "description": "The password verifier defined by the SPAKE2+ protocol."
        }
      },
      "description": "A password verifier of a given username-password pair for the server to authenticate the user\nvia the SPAKE2+ protocol."
    },
    "v1Permission": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        }
      }
    },
    "v1Role": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "system_role": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "v1SecondFactor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "user_id": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/v1SecondFactorType"
        },
        "content": {
          "$ref": "#/definitions/SecondFactorContent"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "last_used_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "An Second factor."
    },
    "v1SecondFactorType": {
      "type": "string",
      "enum": [
        "SMS",
        "TOTP",
        "BACKUP_CODE"
      ],
      "default": "SMS"
    },
    "v1Session": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "device_id": {
          "type": "string"
        },
        "last_seen_ip": {
          "type": "string"
        },
        "last_seen_at": {
          "type": "string",
          "format": "date-time"
        },
        "last_seen_location": {
          "type": "string"
        },
        "user_agent": {
          "type": "string"
        },
        "expired_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "is_current": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "An active session."
    },
    "v1StartVerifyContactRequest": {
      "type": "object",
      "properties": {
        "contact_id": {
          "type": "string"
        }
      },
      "description": "The request for StartVerifyContact."
    },
    "v1StartVerifyContactResponse": {
      "type": "object",
      "description": "The response for StartVerifyContact."
    },
    "v1UnassignRoleResponse": {
      "type": "object",
      "description": "The response for UnassignRole."
    },
    "v1UpdateMetadataRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "user_metadata": {
          "type": "string"
        },
        "app_metadata": {
          "type": "string"
        }
      },
      "description": "The request for UpdateMetadata."
    },
    "v1UpdateMetadataResponse": {
      "type": "object",
      "properties": {
        "user_metadata": {
          "type": "string"
        },
        "app_metadata": {
          "type": "string"
        }
      },
      "description": "The response for UpdateMetadata."
    },
    "v1UpdateUserRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "type": {
          "$ref": "#/definitions/v1UpdateUserRequestType"
        }
      },
      "description": "The request for UpdateUser."
    },
    "v1UpdateUserRequestType": {
      "type": "string",
      "enum": [
        "PROFILE",
        "LOCK"
      ],
      "default": "PROFILE"
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "primary_email": {
          "type": "string"
        },
        "primary_phone": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "user_info": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/authapiv1Contact"
          }
        },
        "sms_authentication": {
          "type": "boolean",
          "format": "boolean"
        },
        "locked": {
          "type": "boolean",
          "format": "boolean"
        },
        "lock_expired_at": {
          "type": "string",
          "format": "date-time"
        },
        "lock_description": {
          "type": "string"
        },
        "primary_email_verified": {
          "type": "string",
          "format": "date-time"
        },
        "primary_phone_verified": {
          "type": "string",
          "format": "date-time"
        },
        "totp_authentication": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
