{
  "swagger": "2.0",
  "info": {
    "title": "keyvaultapi/keyvault.proto",
    "version": "version not set"
  },
  "basePath": "/api/keyvault",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/operation": {
      "post": {
        "summary": "Performs an operation in the key vault.",
        "operationId": "PerformOperation",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PerformOperationResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PerformOperationRequest"
            }
          }
        ],
        "tags": [
          "KeyVaultService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "v1CreateSecretRequest": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/v1SecretType",
          "description": "The type of the secret to be created."
        },
        "size": {
          "type": "integer",
          "format": "int32",
          "description": "The size (in bytes) of the entropy."
        }
      },
      "description": "The request of CreateSecret."
    },
    "v1DecryptRequest": {
      "type": "object",
      "description": "The request of Decrypt."
    },
    "v1EncryptRequest": {
      "type": "object",
      "description": "The request of Encrypt."
    },
    "v1EthereumSignRequest": {
      "type": "object",
      "properties": {
        "object_id": {
          "type": "string",
          "description": "The id of the secret."
        },
        "wallet_path": {
          "type": "string",
          "description": "The derivation path of the secret object for the wallet."
        },
        "type": {
          "$ref": "#/definitions/v1EthereumSignRequestType",
          "description": "The type of the data."
        },
        "data": {
          "type": "string",
          "description": "The data to be signed. In particular for type = TYPED_MESSAGE, it should be in JSON format\nafter hex-decode."
        }
      },
      "description": "The request of Sign."
    },
    "v1EthereumSignRequestType": {
      "type": "string",
      "enum": [
        "TRANSACTION",
        "MESSAGE",
        "PERSONAL_MESSAGE",
        "TYPED_MESSAGE"
      ],
      "default": "TRANSACTION"
    },
    "v1ExportSecretRequest": {
      "type": "object",
      "description": "The request of ExportSecret."
    },
    "v1HDChildPublicKey": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "extended_public_key": {
          "type": "string",
          "description": "Hierarchical determistic (HD) child public key."
        }
      }
    },
    "v1ListHDChildPublicKeysRequest": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "A common prefix of the derivation paths of the secret objects for the wallets."
        }
      },
      "description": "The request of ListHDChildPublicKeys."
    },
    "v1PerformOperationRequest": {
      "type": "object",
      "properties": {
        "create_secret": {
          "$ref": "#/definitions/v1CreateSecretRequest"
        },
        "export_secret": {
          "$ref": "#/definitions/v1ExportSecretRequest"
        },
        "ethereum_sign": {
          "$ref": "#/definitions/v1EthereumSignRequest"
        },
        "encrypt": {
          "$ref": "#/definitions/v1EncryptRequest"
        },
        "decrypt": {
          "$ref": "#/definitions/v1DecryptRequest"
        },
        "list_hd_child_public_keys": {
          "$ref": "#/definitions/v1ListHDChildPublicKeysRequest"
        }
      },
      "description": "The request for PerformOperation."
    },
    "v1PerformOperationResponse": {
      "type": "object",
      "properties": {
        "object_id": {
          "type": "string",
          "description": "The ID of the secret object (used by `CreateSecret`)."
        },
        "signature": {
          "type": "string",
          "description": "The signature of the payload for a given wallet (used by `Sign`)."
        },
        "hd_child_public_keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1HDChildPublicKey"
          },
          "description": "The list of HD child public keys to derive Ethereum wallets (used by `ListEthereumPublicKey`)."
        }
      },
      "description": "The response for PerformOperation."
    },
    "v1SecretType": {
      "type": "string",
      "enum": [
        "HD_KEY",
        "ECDSA_KEY"
      ],
      "default": "HD_KEY"
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
