{
  "swagger": "2.0",
  "info": {
    "title": "authapi/authcore.proto",
    "version": "version not set"
  },
  "basePath": "/api/auth",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/first/oauth": {
      "post": {
        "summary": "Authenticate with OAuth",
        "description": "Authenticates a user by an OAuth factor.",
        "operationId": "AuthenticateOAuth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthenticateOAuthResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AuthenticateOAuthRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/auth/oauth": {
      "get": {
        "summary": "Start authentication with OAuth",
        "description": "Creates a new authentication flow by requesting a new OAuth state.",
        "operationId": "StartAuthenticateOAuth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StartAuthenticateOAuthResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "FACEBOOK"
            ],
            "default": "FACEBOOK"
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/auth/reset_password": {
      "post": {
        "summary": "Start reset password authentication",
        "description": "Creates a new authentication flow by requesting an email (or SMS) for reset password.",
        "operationId": "StartResetPasswordAuthentication",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ResetPasswordAuthenticationState"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StartResetPasswordAuthenticationRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/auth/reset_password/first": {
      "post": {
        "summary": "Authenticate reset password",
        "description": "Authenticates a user by a first factor for reset password.",
        "operationId": "AuthenticateResetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ResetPasswordAuthenticationState"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AuthenticateResetPasswordRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/auth/reset_password/second": {
      "post": {
        "summary": "Authenticate reset password second factor",
        "description": "Authenticates a user by a second factor for reset password.",
        "operationId": "AuthenticateResetPasswordSecondFactor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ResetPasswordAuthenticationState"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AuthenticateResetPasswordSecondFactorRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/auth/second": {
      "post": {
        "summary": "Authenticate second factor",
        "description": "Authenticates a user by a second factor.",
        "operationId": "AuthenticateSecondFactor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthenticationState"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AuthenticateSecondFactorRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/auth/second/start": {
      "post": {
        "summary": "Start second factor authentication",
        "description": "Requests a challenge for the second-factor authentication.",
        "operationId": "StartAuthenticateSecondFactor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StartAuthenticateSecondFactorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StartAuthenticateSecondFactorRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/authn/password/finish": {
      "post": {
        "summary": "Finish password authentication",
        "description": "Finish password authentication by confirming SPAKE2+ confirmation.",
        "operationId": "FinishPasswordAuthn",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthenticationState"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1FinishPasswordAuthnRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/authn/password/key_exchange": {
      "post": {
        "summary": "Authenticate password",
        "description": "Creates a new authentication flow by requesting a password challenge.",
        "operationId": "PasswordAuthnKeyExchange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthenticationState"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1PasswordAuthnKeyExchangeRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/authn/password/start": {
      "post": {
        "summary": "Start password authentication.",
        "description": "Create a new authentication flow by requesting password parameters.",
        "operationId": "StartPasswordAuthn",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthenticationState"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StartPasswordAuthnRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/challenges/proof_of_work": {
      "post": {
        "summary": "Create proof-of-work challenge",
        "description": "Creates a proof of work challenge.",
        "operationId": "CreateProofOfWorkChallenge",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ProofOfWorkChallenge"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {}
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/contacts": {
      "get": {
        "summary": "List contacts",
        "description": "Lists the owned contacts.",
        "operationId": "ListContacts",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListContactsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create contact",
        "description": "Creates a new contact for the current user.",
        "operationId": "CreateContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authapiv1Contact"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateContactRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/contacts/verify": {
      "post": {
        "summary": "Start verify contact",
        "description": "Starts the contact verification flow.",
        "operationId": "StartVerifyContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StartVerifyContactResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StartVerifyContactRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Verify contact",
        "description": "Completes a contact verification with verification code for the current user.",
        "operationId": "CompleteVerifyContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CompleteVerifyContactResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CompleteVerifyContactRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/contacts/{contact_id}": {
      "delete": {
        "summary": "Delete contact",
        "description": "Deletes an owned contact.",
        "operationId": "DeleteContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteContactResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/contacts/{contact_id}/primary": {
      "put": {
        "summary": "Update primary contact",
        "description": "Updates the primary contact for the current user.",
        "operationId": "UpdatePrimaryContact",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authapiv1Contact"
            }
          }
        },
        "parameters": [
          {
            "name": "contact_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/device": {
      "post": {
        "summary": "Register device",
        "description": "Registers a new device.",
        "operationId": "CreateDeviceRegistration",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeviceRegistration"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateDeviceRegistrationRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/machine_tokens": {
      "post": {
        "summary": "Create machine token",
        "description": "Creates machine-to-machine token. This method will be replaced by service account API in the future.",
        "operationId": "CreateMachineToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateMachineTokenResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateMachineTokenRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/oauth/validate_params": {
      "get": {
        "summary": "Validate OAuth parameters",
        "description": "Validates the parameters used for OAuth authentication.",
        "operationId": "ValidateOAuthParameters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ValidateOAuthParametersResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "scope",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "client_id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "redirect_uri",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "response_type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/oauth_factors": {
      "get": {
        "summary": "List OAuth factors",
        "description": "Lists the owned OAuth factors.",
        "operationId": "ListOAuthFactors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListOAuthFactorsResponse"
            }
          }
        },
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create OAuth factor",
        "description": "Creates an OAuth factor of the current user by the response from OAuth.",
        "operationId": "CreateOAuthFactor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateOAuthFactorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateOAuthFactorRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/oauth_factors/access_token": {
      "post": {
        "summary": "Create OAuth factor by access token",
        "description": "Creates an OAuth factor of the current user by an encrypted access token.",
        "operationId": "CreateOAuthFactorByAccessToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateOAuthFactorByAccessTokenResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateOAuthFactorByAccessTokenRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/oauth_factors/start": {
      "get": {
        "summary": "Start create OAuth factor",
        "description": "Initiates the process to create external OAuth authentication as the first factor.",
        "operationId": "StartCreateOAuthFactor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StartCreateOAuthFactorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "service",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "FACEBOOK"
            ],
            "default": "FACEBOOK"
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/oauth_factors/{id}": {
      "delete": {
        "summary": "Delete OAuth factor",
        "description": "Deletes an owned OAuth factor.",
        "operationId": "DeleteOAuthFactor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteOAuthFactorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/second_factors": {
      "get": {
        "summary": "List second factors",
        "description": "Lists the owned second factors.",
        "operationId": "ListSecondFactors",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSecondFactorsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "post": {
        "summary": "Create second factor",
        "description": "Creates a second factor of the current user.",
        "operationId": "CreateSecondFactor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1SecondFactor"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSecondFactorRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/second_factors/start": {
      "post": {
        "summary": "Start create second factor",
        "description": "Initiates the process of creating second factor.",
        "operationId": "StartCreateSecondFactor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StartCreateSecondFactorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1StartCreateSecondFactorRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/second_factors/{id}": {
      "delete": {
        "summary": "Delete second factor",
        "description": "Deletes an owned second factor.",
        "operationId": "DeleteSecondFactor",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteSecondFactorResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/sessions": {
      "get": {
        "summary": "List sessions",
        "description": "Lists the active sessions of the current user.",
        "operationId": "ListSessions",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSessionsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "page_token",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ascending",
            "in": "query",
            "required": false,
            "type": "boolean",
            "format": "boolean"
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "summary": "Delete current session",
        "description": "Deletes the current session of the current user.",
        "operationId": "DeleteCurrentSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteCurrentSessionResponse"
            }
          }
        },
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/sessions/{session_id}": {
      "delete": {
        "summary": "Delete session",
        "description": "Deletes an active session of the current user.",
        "operationId": "DeleteSession",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteSessionResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "session_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/tokens": {
      "post": {
        "summary": "Create access token",
        "description": "Creates a new access token that can be used to access the authenticated APIs.",
        "operationId": "CreateAccessToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AccessToken"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateAccessTokenRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/users": {
      "post": {
        "summary": "Create user",
        "description": "Creates a new user.",
        "operationId": "CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateUserResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    },
    "/users/current": {
      "get": {
        "summary": "Get current user",
        "description": "Gets the profile of the current user.",
        "operationId": "GetCurrentUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        },
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update current user",
        "description": "Updates the profile of the current user.",
        "operationId": "UpdateCurrentUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1User"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateCurrentUserRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/current/password/finish": {
      "post": {
        "summary": "Change password",
        "description": "Changes the password for the current user.",
        "operationId": "FinishChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FinishChangePasswordResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1FinishChangePasswordRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/current/password/key_exchange": {
      "post": {
        "summary": "Create password challenge",
        "description": "Creates a challenge for SPAKE2+ for the current user.",
        "operationId": "ChangePasswordKeyExchange",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1PasswordChallenge"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChangePasswordKeyExchangeRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/current/password/start": {
      "get": {
        "summary": "Start Change Password",
        "description": "Create a change password flow for current user by requesting password parameters.",
        "operationId": "StartChangePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1StartChangePasswordResponse"
            }
          }
        },
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/metadata": {
      "get": {
        "summary": "Get metadata",
        "description": "Gets the user metadata of the current user.",
        "operationId": "GetMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetMetadataResponse"
            }
          }
        },
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "summary": "Update metadata",
        "description": "Updates the user metadata of the current user.",
        "operationId": "UpdateMetadata",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateMetadataResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1UpdateMetadataRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ],
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/users/reset_password": {
      "post": {
        "summary": "Reset password",
        "description": "Resets the password.",
        "operationId": "ResetPassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ResetPasswordResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ResetPasswordRequest"
            }
          }
        ],
        "tags": [
          "AuthService"
        ]
      }
    }
  },
  "definitions": {
    "AccessTokenTokenType": {
      "type": "string",
      "enum": [
        "BEARER"
      ],
      "default": "BEARER"
    },
    "CreateAccessTokenRequestGrantType": {
      "type": "string",
      "enum": [
        "AUTHORIZATION_TOKEN",
        "REFRESH_TOKEN"
      ],
      "default": "AUTHORIZATION_TOKEN"
    },
    "OAuthFactorOAuthService": {
      "type": "string",
      "enum": [
        "FACEBOOK"
      ],
      "default": "FACEBOOK"
    },
    "SecondFactorContent": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        },
        "used": {
          "type": "string",
          "format": "int64"
        },
        "codes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "authapiv1Contact": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/v1ContactType"
        },
        "value": {
          "type": "string"
        },
        "verified": {
          "type": "boolean",
          "format": "boolean"
        },
        "primary": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "An email or phone number registered by a user."
    },
    "v1AccessToken": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string",
          "description": "The access token issued by the server."
        },
        "refresh_token": {
          "type": "string",
          "description": "The new refresh token for obtaining access token later."
        },
        "token_type": {
          "$ref": "#/definitions/AccessTokenTokenType",
          "description": "Type of the token."
        },
        "expires_in": {
          "type": "string",
          "format": "int64",
          "description": "The lifetime in seconds of the access token."
        },
        "id_token": {
          "type": "string",
          "description": "The ID token issued by the server."
        }
      },
      "description": "An access token."
    },
    "v1AuthenticateOAuthRequest": {
      "type": "object",
      "properties": {
        "temporary_token": {
          "type": "string"
        },
        "oauth_response": {
          "$ref": "#/definitions/v1OAuthResponse"
        }
      },
      "description": "The request for AuthenticateOAuth."
    },
    "v1AuthenticateOAuthResponse": {
      "type": "object",
      "properties": {
        "authentication_state": {
          "$ref": "#/definitions/v1AuthenticationState"
        },
        "create_account": {
          "type": "boolean",
          "format": "boolean"
        },
        "preferred_email": {
          "type": "string"
        },
        "access_token": {
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/OAuthFactorOAuthService"
        }
      },
      "description": "The response for AuthenticateOAuth."
    },
    "v1AuthenticateResetPasswordRequest": {
      "type": "object",
      "properties": {
        "temporary_token": {
          "type": "string"
        },
        "contact_token": {
          "$ref": "#/definitions/v1ContactToken"
        }
      },
      "description": "The request for AuthenticateResetPassword."
    },
    "v1AuthenticateResetPasswordSecondFactorRequest": {
      "type": "object",
      "properties": {
        "temporary_token": {
          "type": "string"
        }
      },
      "description": "The request for AuthenticateResetPasswordSecondFactor."
    },
    "v1AuthenticateSecondFactorRequest": {
      "type": "object",
      "properties": {
        "temporary_token": {
          "type": "string"
        },
        "challenge": {
          "$ref": "#/definitions/v1AuthenticationStateChallengeType"
        },
        "answer": {
          "type": "string"
        }
      },
      "description": "The request for AuthenticateSecondFactor."
    },
    "v1AuthenticationState": {
      "type": "object",
      "properties": {
        "temporary_token": {
          "type": "string",
          "description": "The temporary token to identify the authentication request."
        },
        "authenticated": {
          "type": "boolean",
          "format": "boolean",
          "description": "A boolean that indicates whether session is authenticated."
        },
        "authenticated_user_id": {
          "type": "string",
          "description": "The ID of the authenticated user, or an empty string if the session is not authenticated."
        },
        "challenges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1AuthenticationStateChallengeType"
          },
          "description": "A list of ChallengeType that the client can attempt to complete authenticating as a user."
        },
        "password_challenge": {
          "$ref": "#/definitions/v1PasswordChallenge",
          "description": "A new PasswordChallenge if PASSWORD is one of the `challenges`. Otherwise, it\nwill be empty."
        },
        "password_salt": {
          "type": "string",
          "format": "byte"
        },
        "authorization_token": {
          "type": "string",
          "description": "The authorization token for the user, or an empty string if the session is not authenticated."
        }
      }
    },
    "v1AuthenticationStateChallengeType": {
      "type": "string",
      "enum": [
        "PASSWORD",
        "TIME_BASED_ONE_TIME_PASSWORD",
        "UNIVERSAL_TWO_FACTOR",
        "EMAIL_CODE",
        "SMS_CODE",
        "OAUTH",
        "BACKUP_CODE"
      ],
      "default": "PASSWORD"
    },
    "v1BackupCodeInfo": {
      "type": "object",
      "description": "Information for backup code."
    },
    "v1ChangePasswordKeyExchangeRequest": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "format": "byte",
          "description": "The key-exchange request message of the client."
        }
      },
      "title": "The request for ChangePasswordKeyExchange"
    },
    "v1CheckHandleAvailabilityResponse": {
      "type": "object",
      "description": "The response for CheckHandleAvailability."
    },
    "v1CompleteVerifyContactRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "code": {
          "$ref": "#/definitions/v1ContactVerificationCode"
        },
        "oauth_access_token": {
          "type": "string"
        }
      },
      "description": "The request for CompleteVerifyContact."
    },
    "v1CompleteVerifyContactResponse": {
      "type": "object",
      "description": "The response for CompleteVerifyContact."
    },
    "v1ContactToken": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "description": "Contact token response."
    },
    "v1ContactType": {
      "type": "string",
      "enum": [
        "EMAIL",
        "PHONE"
      ],
      "default": "EMAIL"
    },
    "v1ContactVerificationCode": {
      "type": "object",
      "properties": {
        "contact_id": {
          "type": "string"
        },
        "code": {
          "type": "string"
        }
      },
      "description": "An contact verification code."
    },
    "v1CreateAccessTokenRequest": {
      "type": "object",
      "properties": {
        "grant_type": {
          "$ref": "#/definitions/CreateAccessTokenRequestGrantType"
        },
        "token": {
          "type": "string"
        }
      },
      "description": "The request for CreateAccessToken."
    },
    "v1CreateContactRequest": {
      "type": "object",
      "properties": {
        "contact": {
          "$ref": "#/definitions/authapiv1Contact"
        }
      },
      "description": "The request for CreateContact."
    },
    "v1CreateDeviceRegistrationRequest": {
      "type": "object",
      "properties": {
        "proof_of_work_response": {
          "$ref": "#/definitions/v1ProofOfWorkResponse",
          "title": "Response of a Proof-of-work challenge for anti-spam"
        }
      },
      "description": "The request for CreateDevice."
    },
    "v1CreateMachineTokenRequest": {
      "type": "object",
      "title": "The request for CreateMachineToken"
    },
    "v1CreateMachineTokenResponse": {
      "type": "object",
      "properties": {
        "machine_token": {
          "type": "string"
        }
      },
      "title": "The response for CreateMachineToken"
    },
    "v1CreateOAuthFactorByAccessTokenRequest": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/OAuthFactorOAuthService"
        }
      },
      "description": "The request for CreateOAuthFactorByAccessToken."
    },
    "v1CreateOAuthFactorByAccessTokenResponse": {
      "type": "object",
      "properties": {
        "access_token": {
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/OAuthFactorOAuthService"
        }
      },
      "description": "The response for CreateOAuthFactorByAccessToken."
    },
    "v1CreateOAuthFactorRequest": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "service": {
          "$ref": "#/definitions/OAuthFactorOAuthService"
        }
      },
      "description": "The request for CreateOAuthFactor."
    },
    "v1CreateOAuthFactorResponse": {
      "type": "object",
      "description": "The response for CreateOAuthFactor."
    },
    "v1CreateSecondFactorRequest": {
      "type": "object",
      "properties": {
        "totp_info": {
          "$ref": "#/definitions/v1TOTPInfo"
        },
        "sms_info": {
          "$ref": "#/definitions/v1SMSInfo"
        },
        "backup_code_info": {
          "$ref": "#/definitions/v1BackupCodeInfo"
        },
        "answer": {
          "type": "string"
        }
      },
      "description": "The request for CreateSecondFactor."
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "send_verification": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "The request for CreateUser."
    },
    "v1CreateUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        },
        "refresh_token": {
          "type": "string"
        }
      },
      "description": "The response for CreateUser."
    },
    "v1DeleteContactResponse": {
      "type": "object",
      "description": "The response for DeleteContact."
    },
    "v1DeleteCurrentSessionResponse": {
      "type": "object",
      "description": "The response for DeleteCurrentSession."
    },
    "v1DeleteOAuthFactorResponse": {
      "type": "object",
      "description": "The response for DeleteOAuthFactor."
    },
    "v1DeleteSecondFactorResponse": {
      "type": "object",
      "description": "The response for DeleteSecondFactor."
    },
    "v1DeleteSessionResponse": {
      "type": "object",
      "description": "The response for DeleteSession."
    },
    "v1DeviceRegistration": {
      "type": "object",
      "properties": {
        "device_token": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "Device registration."
    },
    "v1FinishChangePasswordRequest": {
      "type": "object",
      "properties": {
        "password_verifier": {
          "$ref": "#/definitions/v1PasswordVerifier"
        },
        "old_password_response": {
          "$ref": "#/definitions/v1PasswordResponse"
        }
      },
      "description": "The request for FinishChangePassword."
    },
    "v1FinishChangePasswordResponse": {
      "type": "object",
      "description": "The response for FinishChangePassword."
    },
    "v1FinishPasswordAuthnRequest": {
      "type": "object",
      "properties": {
        "temporary_token": {
          "type": "string",
          "description": "A temporary token that is used during the authentication flow."
        },
        "password_response": {
          "$ref": "#/definitions/v1PasswordResponse"
        }
      },
      "description": "The request for FinishPasswordAuthn."
    },
    "v1GetMetadataResponse": {
      "type": "object",
      "properties": {
        "user_metadata": {
          "type": "string"
        }
      },
      "description": "The request for GetMetadata."
    },
    "v1ListContactsResponse": {
      "type": "object",
      "properties": {
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/authapiv1Contact"
          }
        }
      },
      "description": "The response for ListContacts."
    },
    "v1ListOAuthFactorsResponse": {
      "type": "object",
      "properties": {
        "oauth_factors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1OAuthFactor"
          }
        }
      },
      "description": "The response for ListOAuthFactors."
    },
    "v1ListSecondFactorsResponse": {
      "type": "object",
      "properties": {
        "second_factors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1SecondFactor"
          }
        }
      },
      "description": "The response for ListSecondFactors."
    },
    "v1ListSessionsResponse": {
      "type": "object",
      "properties": {
        "sessions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Session"
          }
        },
        "next_page_token": {
          "type": "string"
        },
        "previous_page_token": {
          "type": "string"
        },
        "total_size": {
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "The response for ListSessions."
    },
    "v1OAuthFactor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "user_id": {
          "type": "string",
          "format": "int64"
        },
        "service": {
          "$ref": "#/definitions/OAuthFactorOAuthService"
        },
        "oauth_user_id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "last_used_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "An OAuth factor."
    },
    "v1OAuthResponse": {
      "type": "object",
      "properties": {
        "service": {
          "$ref": "#/definitions/OAuthFactorOAuthService"
        },
        "code": {
          "type": "string"
        }
      },
      "description": "An OAuth response."
    },
    "v1PasswordAuthnKeyExchangeRequest": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "format": "byte",
          "description": "The key-exchange request message of the client."
        },
        "temporary_token": {
          "type": "string",
          "description": "A temporary token that is used during the authentication flow."
        }
      },
      "description": "The request for PasswordAuthnKeyExchange."
    },
    "v1PasswordChallenge": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "message": {
          "type": "string",
          "format": "byte",
          "description": "The key-exchange response message of the server."
        }
      },
      "description": "The SPAKE2+ challenge from the server (incomingMessage from SPAKE2+)."
    },
    "v1PasswordResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "confirmation": {
          "type": "string",
          "format": "byte",
          "description": "The confirmation message of the client."
        }
      },
      "description": "The SPAKE2+ response (comfirmation for SPAKE2+)."
    },
    "v1PasswordVerifier": {
      "type": "object",
      "properties": {
        "salt": {
          "type": "string",
          "format": "byte",
          "description": "The salt used to hash the password."
        },
        "verifierW0": {
          "type": "string",
          "format": "byte",
          "description": "The password verifier defined by the SPAKE2+ protocol."
        },
        "verifierL": {
          "type": "string",
          "format": "byte",
          "description": "The password verifier defined by the SPAKE2+ protocol."
        }
      },
      "description": "A password verifier of a given username-password pair for the server to authenticate the user\nvia the SPAKE2+ protocol."
    },
    "v1ProofOfWorkChallenge": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "challenge": {
          "type": "string"
        },
        "purpose": {
          "type": "string"
        },
        "difficulty": {
          "type": "string",
          "format": "int64"
        }
      },
      "description": "An proof-of-work challenge."
    },
    "v1ProofOfWorkResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "response": {
          "type": "string"
        }
      },
      "description": "An proof-of-work response."
    },
    "v1ResetPasswordAuthenticationState": {
      "type": "object",
      "properties": {
        "temporary_token": {
          "type": "string",
          "description": "The temporary token to identify the authentication request."
        },
        "authenticated": {
          "type": "boolean",
          "format": "boolean",
          "description": "A boolean that indicates whether session is authenticated."
        },
        "reset_password_user_id": {
          "type": "string",
          "description": "The ID of the authenticated user, or an empty string if the session is not authenticated."
        },
        "challenges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1ResetPasswordAuthenticationStateChallengeType"
          },
          "description": "A list of ChallengeType that the client can attempt to complete authenticating as a user."
        },
        "reset_password_token": {
          "type": "string",
          "description": "The reset password token for the user, or an empty string if the session is not authenticated."
        }
      }
    },
    "v1ResetPasswordAuthenticationStateChallengeType": {
      "type": "string",
      "enum": [
        "CONTACT_TOKEN"
      ],
      "default": "CONTACT_TOKEN"
    },
    "v1ResetPasswordRequest": {
      "type": "object",
      "properties": {
        "password_verifier": {
          "$ref": "#/definitions/v1PasswordVerifier"
        },
        "token": {
          "type": "string"
        }
      },
      "description": "The request for ResetPassword."
    },
    "v1ResetPasswordResponse": {
      "type": "object",
      "description": "The response for ResetPassword."
    },
    "v1SMSInfo": {
      "type": "object",
      "properties": {
        "phone_number": {
          "type": "string"
        }
      },
      "description": "Information for SMS second factor."
    },
    "v1SecondFactor": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "int64"
        },
        "user_id": {
          "type": "string",
          "format": "int64"
        },
        "type": {
          "$ref": "#/definitions/v1SecondFactorType"
        },
        "content": {
          "$ref": "#/definitions/SecondFactorContent"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "last_used_at": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "An Second factor."
    },
    "v1SecondFactorType": {
      "type": "string",
      "enum": [
        "SMS",
        "TOTP",
        "BACKUP_CODE"
      ],
      "default": "SMS"
    },
    "v1Session": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "user_id": {
          "type": "string"
        },
        "device_id": {
          "type": "string"
        },
        "last_seen_ip": {
          "type": "string"
        },
        "last_seen_at": {
          "type": "string",
          "format": "date-time"
        },
        "last_seen_location": {
          "type": "string"
        },
        "user_agent": {
          "type": "string"
        },
        "expired_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "is_current": {
          "type": "boolean",
          "format": "boolean"
        }
      },
      "description": "An active session."
    },
    "v1StartAuthenticateOAuthResponse": {
      "type": "object",
      "properties": {
        "oauth_endpoint_uri": {
          "type": "string"
        }
      },
      "description": "The response for StartAuthenticateOAuth."
    },
    "v1StartAuthenticateSecondFactorRequest": {
      "type": "object",
      "properties": {
        "temporary_token": {
          "type": "string",
          "description": "A temporary token that is used during the authentication flow."
        },
        "challenge": {
          "$ref": "#/definitions/v1AuthenticationStateChallengeType",
          "description": "The selected second factor to authenticate."
        }
      },
      "description": "The request for StartAuthenticateSecondFactor."
    },
    "v1StartAuthenticateSecondFactorResponse": {
      "type": "object",
      "description": "The response for StartAuthenticateSecondFactor."
    },
    "v1StartChangePasswordResponse": {
      "type": "object",
      "properties": {
        "salt": {
          "type": "string",
          "format": "byte",
          "description": "Salt for the user."
        }
      },
      "title": "The response for StartChangePassword"
    },
    "v1StartCreateOAuthFactorResponse": {
      "type": "object",
      "properties": {
        "oauth_endpoint_uri": {
          "type": "string"
        }
      },
      "description": "The response for StartCreateOAuthFactor."
    },
    "v1StartCreateSecondFactorRequest": {
      "type": "object",
      "properties": {
        "sms_info": {
          "$ref": "#/definitions/v1SMSInfo"
        }
      },
      "description": "The request for StartCreateSecondFactor."
    },
    "v1StartCreateSecondFactorResponse": {
      "type": "object",
      "description": "The response for StartCreateSecondFactor."
    },
    "v1StartPasswordAuthnRequest": {
      "type": "object",
      "properties": {
        "user_handle": {
          "type": "string",
          "description": "Username, primary email or primary phone number of the user."
        },
        "device_token": {
          "type": "string",
          "description": "A device token that authenticates the device."
        }
      },
      "description": "The request for StartPasswordAuthn."
    },
    "v1StartResetPasswordAuthenticationRequest": {
      "type": "object",
      "properties": {
        "user_handle": {
          "type": "string",
          "description": "Username, primary email or primary phone number of the user."
        },
        "device_token": {
          "type": "string",
          "title": "The device token that authenticates the device"
        }
      },
      "description": "The request for StartResetPasswordAuthentication."
    },
    "v1StartVerifyContactRequest": {
      "type": "object",
      "properties": {
        "contact_id": {
          "type": "string"
        }
      },
      "description": "The request for StartVerifyContact."
    },
    "v1StartVerifyContactResponse": {
      "type": "object",
      "description": "The response for StartVerifyContact."
    },
    "v1TOTPInfo": {
      "type": "object",
      "properties": {
        "secret": {
          "type": "string"
        },
        "identifier": {
          "type": "string"
        }
      },
      "description": "Information for time-based one-time password second factor."
    },
    "v1UpdateCurrentUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User"
        }
      },
      "description": "The request for UpdateCurrentUser."
    },
    "v1UpdateMetadataRequest": {
      "type": "object",
      "properties": {
        "user_metadata": {
          "type": "string"
        }
      },
      "description": "The request for UpdateMetadata."
    },
    "v1UpdateMetadataResponse": {
      "type": "object",
      "properties": {
        "user_metadata": {
          "type": "string"
        }
      },
      "description": "The response for UpdateMetadata."
    },
    "v1User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "primary_email": {
          "type": "string"
        },
        "primary_phone": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "user_info": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "contacts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/authapiv1Contact"
          }
        },
        "sms_authentication": {
          "type": "boolean",
          "format": "boolean"
        },
        "locked": {
          "type": "boolean",
          "format": "boolean"
        },
        "lock_expired_at": {
          "type": "string",
          "format": "date-time"
        },
        "lock_description": {
          "type": "string"
        },
        "primary_email_verified": {
          "type": "string",
          "format": "date-time"
        },
        "primary_phone_verified": {
          "type": "string",
          "format": "date-time"
        },
        "totp_authentication": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "v1ValidateOAuthParametersResponse": {
      "type": "object",
      "description": "The response for ValidateOAuthParameters."
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  }
}
